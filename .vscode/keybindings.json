// Place your key bindings in this file to override the defaultsauto[]
[
  {
    "key": "alt+cmd+a",
    "command": "workbench.action.toggleActivityBarVisibility"
  },
  {
    "key": "cmd+;",
    "command": "cursorEnd",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+cmd+\\",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "shift+cmd+enter",
    "command": "-continue.acceptDiff"
  },
  {
    "key": "shift+cmd+m",
    "command": "-continue.focusContinueInputWithEdit"
  },
  {
    "key": "cmd+d",
    "command": "-continue.debugTerminal"
  },
  {
    "key": "shift+cmd+l",
    "command": "-continue.quickTextEntry"
  },
  {
    "key": "shift+cmd+backspace",
    "command": "-continue.rejectDiff"
  },
  {
    "key": "alt+cmd+m",
    "command": "-continue.toggleAuxiliaryBar"
  },
  {
    "key": "f5",
    "command": "-workbench.action.debug.continue",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "cmd+m",
    "command": "-continue.focusContinueInput"
  },
  {
    "key": "ctrl+alt+cmd+f",
    "command": "formattingToggle.toggleFormat"
  },
  {
    "key": "shift+cmd+a",
    "command": "-notification.acceptPrimaryAction",
    "when": "notificationToastsVisible"
  },
  {
    "key": "cmd+space",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+space",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+alt+cmd+p",
    "command": "git.push"
  },
  {
    "key": "escape",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "!editorFocus"
  },
  {
    "key": "alt+cmd+t",
    "command": "-workbench.action.closeOtherEditors"
  },
  {
    "key": "alt+cmd+t",
    "command": "extension.toggleHEX",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+cmd+t",
    "command": "-extension.toggleHEX",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+f",
    "command": "-list.find",
    "when": "listFocus && listSupportsFind"
  },
  {
    "key": "cmd+f",
    "command": "actions.find",
    "when": "editorFocus || editorIsOpen || filesExplorerFocus"
  },
  {
    "key": "cmd+f",
    "command": "-actions.find",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "alt+cmd+n",
    "command": "-extension.MinifyAll2OtherDoc"
  },
  {
    "key": "alt+cmd+n",
    "command": "fileutils.newFileAtRoot"
  },
  {
    "key": "cmd+m",
    "command": "-markdown.extension.editing.toggleMath",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
  },
  {
    "key": "cmd+m",
    "command": "continue.focusContinueInputWithEdit"
  },
  {
    "key": "shift+cmd+d",
    "command": "-workbench.view.debug",
    "when": "viewContainer.workbench.view.debug.enabled"
  },
  {
    "key": "shift+cmd+d",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "ctrl+alt+cmd+down",
    "command": "workbench.action.focusBelowGroup"
  },
  {
    "key": "ctrl+alt+cmd+up",
    "command": "workbench.action.focusAboveGroup"
  },
  {
    "key": "cmd+k cmd+down",
    "command": "-workbench.action.focusBelowGroup"
  },
  {
    "key": "cmd+k cmd+down",
    "command": "workbench.action.splitEditorDown"
  },
  {
    "key": "cmd+escape",
    "command": "terminal.focus"
  },
  {
    "key": "shift+cmd+t",
    "command": "-workbench.view.extension.bazel-explorer"
  }
]